<?xml version="1.0" encoding="utf-8"?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="BuildAndTest" ToolsVersion="12.0">

    <!--

    Standard Build Script
    Intended to isolate the codebase from the details of the CI server.

    Inputs:
      * OutputDirectory:  location for final build output
      * Version:          (optional) version number to use for auto-versioned projects
      * SemanticTag:      (optional) semantic tag to apply to auto- and SemVer-versioned projects (default: alpha)

    Outputs:
      * Everything in OutputDirectory

    Do not customise this file. Add projects or override constants in Build.props.

    -->

    <Import Project="Common.props" />
    <Import Project="Common.targets" />

    <PropertyGroup>
        <WorkingDirectory>$(MSBuildProjectDirectory)</WorkingDirectory>
        <Version></Version>
        <SemanticTag>alpha</SemanticTag>
    </PropertyGroup>

    <ItemDefinitionGroup>
        <!-- Projects which produce NuGet packages. -->
        <NugetProjects></NugetProjects>
        <!-- NUnit test projects. -->
        <NUnitProjects></NUnitProjects>
        <!-- Projects which reference OctoPack and use it to produce Octopus packages. -->
        <OctoPackProjects></OctoPackProjects>
        <!-- Specific binary files which should be copied directly to the output directory. -->
        <OutputBinaries></OutputBinaries>
        <!-- Projects which produce files which should be copied directly to the output directory. -->
        <OutputBinaryProjects></OutputBinaryProjects>
    </ItemDefinitionGroup>

    <!-- Do not add project references to this file. Add them in Build.props instead. -->

    <Import Project="Build.props" />

    <ItemGroup>
        <_BuildProperties Include="Configuration=$(Configuration)" />
    </ItemGroup>

    <Target DependsOnTargets="ValidateParameters;PrepareOutputDirectory;PrepareBuildProperties;Restore" Name="Build">
        <MSBuild Projects="@(NugetProjects)" Targets="Build" ToolsVersion="$(PreferredMSBuildToolsVersion)" BuildInParallel="true" Properties="@(_BuildProperties)" />
        <MSBuild Projects="@(OutputBinaryProjects)" Targets="Build" ToolsVersion="$(PreferredMSBuildToolsVersion)" BuildInParallel="true" Properties="@(_BuildProperties)">
            <Output TaskParameter="TargetOutputs" ItemName="_ProjectOutputBinaries" />
        </MSBuild>
        <ItemGroup>
            <_ProjectOutputConfigurationFiles Include="@(_ProjectOutputBinaries->'%(Identity).config')" />
            <OutputBinaries Include="@(_ProjectOutputBinaries)" />
            <OutputBinaries Include="%(_ProjectOutputConfigurationFiles.Identity)" Condition="Exists('%(Identity)')" />
        </ItemGroup>
        <MSBuild Projects="@(OctoPackProjects)" Targets="Build" ToolsVersion="$(PreferredMSBuildToolsVersion)" BuildInParallel="true" Properties="@(_BuildProperties)" />
    </Target>
    
    <Target Name="Restore">
        <ItemGroup>
            <_AllProjects Include="@(NugetProjects)" />
            <_AllProjects Include="@(NUnitProjects)" />
            <_AllProjects Include="@(OctoPackProjects)" />
            <_AllProjects Include="@(OutputBinaryProjects)" />
            <_AllProjects Include="SolutionPackages\SolutionPackages.*proj" />
        </ItemGroup>
        <MSBuild Projects="@(_AllProjects)" Targets="Restore" ToolsVersion="$(PreferredMSBuildToolsVersion)" BuildInParallel="true" Properties="@(_BuildProperties);RestorePackagesPath=$(MSBuildProjectDirectory)\packages" />
    </Target>

    <Target Name="BuildAndTest" DependsOnTargets="Build;RunNUnitTests">
    </Target>
   
    <Target Name="BuildAndPackage" DependsOnTargets="BuildAndTest">
        <MSBuild Projects="@(NugetProjects)" Targets="Build" ToolsVersion="$(PreferredMSBuildToolsVersion)" BuildInParallel="true" Properties="@(_BuildProperties)"/>
        <Copy SourceFiles="@(OutputBinaries)" DestinationFiles="@(OutputBinaries->'$(OutputDirectory)\%(FileName)%(Extension)')" />
        <MSBuild Projects="@(OctoPackProjects)" Targets="Build" ToolsVersion="$(PreferredMSBuildToolsVersion)" BuildInParallel="true" Properties="@(_BuildProperties);RunOctoPack=true;OctoPackPublishPackageToFileShare=$(OutputDirectory)" />
    </Target>

    <Target Name="PrepareOutputDirectory" DependsOnTargets="ValidateParameters">
        <MakeDir Directories="$(OutputDirectory)" />
    </Target>

    <Target Name="ValidateParameters">
        <Warning Text="Version was not specified" Condition="'$(Version)' == ''" />
        <Error Text="OutputDirectory was not specified" Condition="'$(OutputDirectory)' == ''" />

        <!-- Make paths absolute -->
        <CombinePath BasePath="$(MSBuildProjectDirectory)" Paths="$(OutputDirectory)">
            <Output TaskParameter="CombinedPaths" PropertyName="OutputDirectory" />
        </CombinePath>

        <Message Text="Source Version:   $(Version)" />
        <Message Text="Semantic Tag:     $(SemanticTag)" />
        <Message Text="Output Directory: $(OutputDirectory)" />
    </Target>
</Project>
